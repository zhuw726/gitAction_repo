name: step001
# on: [push, fork, workflow_dispatch]
on:
  pull_request:
    types:
      - opened
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  job01:
    runs-on: ubuntu-latest
    steps:
      - name: get code
        uses: actions/checkout@v4
      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}
      - name: install dep
        run: npm ci
      # - name: lint
      #   run: npm run lint
      - name: test
        run: npm run test
  job02:
    needs: job01
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.ov }}
    steps:
      - name: get code
        uses: actions/checkout@v4
      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}
      - name: install dep
        run: npm ci
      - name: install test
        id: run-test-in-job02
        run: npm run test
      - name: build
        run: npm run build
      - name: publish js filename
        run: find dist/assets/*.js -type f -execdir echo 'ov={}' >> $GITHUB_OUTPUT ';'
        id: publish
      - name: upload
        uses: actions/upload-artifact@v4
        if: failure() && steps.run-test-in-job02.outcome == 'failure'
        with:
          name: dist-files
          path: |
            dist
            package.json
  job03:
    needs: job02
    runs-on: ubuntu-latest
    steps:
      - name: get artifacts
        uses: actions/download-artifact@v4 
        with:
          name: dist-files
      - name: Display structure of downloaded files
        run: ls -R
      - name: using output
        run: echo "${{ needs.job02.outputs.script-file }}"
      - name: deploy
        run: echo "deploy to ECR"
  job04:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: get artifacts
        run: echo "faild "